version: '2'
services:
  zookeeper:
    image: jplock/zookeeper
    ## 镜像
    ports:
      - "2181:2181"                 ## 对外暴露的端口号
  zkui:
    image: tobilg/zookeeper-webui
    environment:
      ZK_DEFAULT_NODE: zookeeper:2181
    ports:
      - "18080:8080"
  kafka1:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_CREATE_TOPICS: TestComposeTopic:4:3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      JMX_PORT: 9999
    container_name: kafka01
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka2:
    image: wurstmeister/kafka
    ports:
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 2
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093
      JMX_PORT: 9999
    container_name: kafka02
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka3:
    image: wurstmeister/kafka
    ports:
      - "9094:9094"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 3
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9094
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9094
      JMX_PORT: 9999
    container_name: kafka03
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka-manager:  
    image: hlebalbau/kafka-manager:stable                ## 镜像：开源的web管理kafka集群的界面
    environment:
      ZK_HOSTS: "zookeeper:2181"                   ## 修改:宿主机IP
      APPLICATION_SECRET: "random-secret"
    ports:  
      - "9000:9000"                                 ## 暴露端口
    command: -Dpidfile.path=/dev/null
